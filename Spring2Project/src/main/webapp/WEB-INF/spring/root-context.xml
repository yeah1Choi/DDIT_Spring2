<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 
		root-contextm.xml : 스프링 설정을 위한 파일
		
		스프링 설정?
		- view에 관련되지 않은 객체를 정의
		- service(비즈니스 기능), DAO(repository : 저장소), DB 등 비즈니스 로직과 관련된 설정
		- BasicDataSource dataSource = new BasicDataSource();
		- dataSource.setDriverClassName("oracle.jdbc.driver.OravleDriver");
	 -->
	 
	 <!-- dataSource : 데이터베이스와 관련된 정보를 설정 -->
	 <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
	 	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
	 	<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
	 	<property name="username" value="spring2" />
	 	<property name="password" value="java" />
	 </bean>
	 
	 <!-- 
	 	데이버베이스와 연결을 맺고 끊어질 때까지의 라이프 사이클을 관리해주는 SqlSessionFactory 객체 생성
	 	1) dataSource
	 	2) Mapper.xml 위치 지정
	 	3) 마이바티스 설정 위치 지정
	  -->
	  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	  	<property name="dataSource" ref="dataSource" />
	 	<property name="mapperLocations" value="classpath:/sqlmap/**/*_SQL.xml" />
	 	<property name="configLocation" value="/WEB-INF/mybatisAlias/mybatisAlias.xml" />
	  </bean>
	  
	  <!-- 
	  	데이터베이스에 쿼리를 실행시키는 객체
	  	이 객체를 통해서 쿼리를 실행
	   -->
	  <bean id="SqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	  	<constructor-arg name="sqlSessionFactory" index="0" ref="sqlSessionFactory"/>
	  </bean>
	  
	  <!-- 
	  	Mapper 인터페이스 설정
	  	개발자가 직접 DAO를 설정하지 않아도 자동으로 매퍼 인터페이스를 활용하는 객체를 생성
	   -->
	   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	   		<property name="basePackage" value="kr.or.ddit.mapper" />
	   </bean>
	   
	   <!-- 
	   	MultipartFile CommonsMultipartResolver 설정 시
	    -->
	   <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    	<!-- 하나의 요청당 파일 업로드 용량 (3145728) -->
	    	<property name="maxUploadSize" value="3145728" />
	    	<!-- 메모리에 저장되는 최대 용량 (3145728) -->
	    	<property name="maxInMemorySize" value="3145728" />
	    	<property name="defaultEncoding" value="UTF-8" />
	   </bean>
	   
	   <!-- 파일 업로드 디렉토리 설정 : 가져다 쓸 수 있는 객체를 만듬 만들어 주는 거 아님 -->
	   <bean id="uploadPath" class="java.lang.String">
	   		<constructor-arg value="D:\A_TeachingMaterial\07_JSP_Spring\workspace\workspace_spring2\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\Spring2Project\resources\upload" />
	   </bean>
	   
	   <!-- 스프링 AOP 활성화 --><!-- 빈 등록에 중첩이 없도록 클래스를 모두 구분해야함 -->
	   <aop:aspectj-autoproxy/>
	   <context:component-scan base-package="kr.or.ddit.aop"/>
	   <context:component-scan base-package="kr.or.ddit.service"/>
	   
	   <!-- 트랜젝션 관리자의 빈을 정의 -->
	   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	   		<property name="dataSource" ref="dataSource" />
	   </bean>
	   
	   <!-- 어노테이션 기반의 트랜젝션 제어를 활성화 -->
	   <tx:annotation-driven/>
	   
</beans>












