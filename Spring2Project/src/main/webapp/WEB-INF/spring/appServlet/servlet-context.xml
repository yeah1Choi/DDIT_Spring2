<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 
		Tiles 설정을 위한 Bean 등록
		resolver가 page 정보를 jsp보다 먼저 받는 앤데 
		tiles 부트스트랩을 이용하려면 tiles가 기존의 resolver보다 먼저 잡아야한다.
		만약 페이지 정보에 오류가 생겼을 때, tiles에서 오류났다 말하는게 아니라 
		tiles가 resolver로 넘겨서 그 오류를 다시 확인하도록 한다.
	-->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/spring/tiles-config.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	<!-- Tiles 설정을 위한 Bean 등록  끝 -->
	
	<context:component-scan base-package="kr.or.ddit.controller" />
	
	<!-- 
		서블릿 표준용 MultipartResolver 를 스프링 빈으로 정의
		- StandardServletMultipartResolver 사용 시 설정
			> Servlet 3.0의 Part를 이용한 MultipartFile 데이터 처리
	 -->
	<!-- <beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	</beans:bean> -->
	
	<!-- 인터셉터 설정 : LoginInterceptor 클래스를 빈으로 정의 : 설정한 클래스는 해당 위치에 존재해야함(설정에 맞는 위치에 존재 !) -->
	<beans:bean id="LoginInterceptor" class="kr.or.ddit.controller.intercept.LoginInterceptor" />
	<interceptors>
		<interceptor>
			<mapping path="/login1"/>
			<beans:ref bean="LoginInterceptor"/>
		</interceptor>
	</interceptors>
	
	<beans:bean id="accessLoggingInterceptor" class="kr.or.ddit.controller.intercept.AccessLoggingInterceptor" />
	<interceptors>
		<interceptor>
			<mapping path="/**"/>
			<exclude-mapping path="/resources/**"/>
			<beans:ref bean="accessLoggingInterceptor"/>
		</interceptor>
	</interceptors>

</beans:beans>













